<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RXInstanceManager">

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}" />
        <Setter Property="RowStyle" Value="{DynamicResource RowStyle}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="GridLinesVisibility" Value="Vertical" />
        <Setter Property="VerticalGridLinesBrush" Value="White" />
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#f8f9fb" />
        <Setter Property="Foreground" Value="#2C353C" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="Margin" Value="10,0,10,10"/>
        <Setter Property="ColumnWidth" Value="*" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    </Style>

    <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#35a7db"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="Упорядочить"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True" >
                <Setter Property="Background" Value="#27aae0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#27aae0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#27aae0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderStackPanel" TargetType="StackPanel">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush >
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="#2C353C" />
                        <GradientStop Offset="1.0" Color="#5b5f6a" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="TextBox">
        <Setter Property="Width" Value="200" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Background" Value="#222b34" />
        <Setter Property="Foreground" Value="#8c8d92" />
        <Setter Property="FontFamily" Value="Times New Roman" />
    </Style>

    <Style x:Key="LeftPanelPassiveButton" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#2C353C" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#279fd4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LeftPanelActiveButton" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#279fd4" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#279fd4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SaveCancelButton" TargetType="Button">
        <Setter Property="Background" Value="#222b34" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#279fd4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FooterInfoTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#5b5f6a" />
    </Style>

    <Style x:Key="RecordActionButton" TargetType="Button">
        <Setter Property="Width" Value="140" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RecordActionActiveButton" TargetType="Button">
        <Setter Property="Width" Value="140" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IDShowTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#222b34" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="EditTextBoxEmpty" TargetType="TextBox">
        <Setter Property="Foreground" Value="LightSlateGray" />
        <Setter Property="Padding" Value="6" />
    </Style>

    <Style x:Key="EditTextBoxEdit" TargetType="TextBox">
        <Setter Property="Padding" Value="6" />
    </Style>

    <Style x:Key="EditComboBoxEmpty" TargetType="ComboBox">
        <Setter Property="Foreground" Value="LightSlateGray" />
        <Setter Property="Margin" Value="8,5" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style x:Key="EditComboBoxEdit" TargetType="ComboBox">
        <Setter Property="Margin" Value="8,5" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <SolidColorBrush x:Key="NormalBrush" Color="#5b5f6a" />
    <SolidColorBrush x:Key="DarkBrush" Color="Black" />
    <SolidColorBrush x:Key="PressedBrush" Color="#5b5f6a" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#5b5f6a" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#5b5f6a" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#222b34" />
    <SolidColorBrush x:Key="GlyphActiveBrush" Color="#8d979e" />
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" Background="{StaticResource NormalBrush}" BorderThickness="0" />
            <Border x:Name="ButtonBorder" Grid.Column="0" Margin="1" Background="{StaticResource WindowBackgroundBrush}" BorderThickness="0" />
            <Path  x:Name="Arrow" Grid.Column="1" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource GlyphActiveBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="Black" />
    </ControlTemplate>
    <Style x:Key="FooterComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="3,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0" Focusable="True" Background="Transparent" Visibility="Hidden"
                                     Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource DarkBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActiveSelectButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#222b34" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#279fd4" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="PassiveSelectButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#222b34" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#2C353C" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="#222b34" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#279fd4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RightPanelButton" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="#222b34" />
        <Setter Property="Foreground" Value="Aqua" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#279fd4" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>